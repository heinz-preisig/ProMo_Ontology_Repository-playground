1 :: half =  Instantiate ( value )
2 :: zero =  Instantiate ( value )
3 :: dt =  diffSpace ( t )
4 :: T =  ParDiff ( U , S )
5 :: p =  neg ( ParDiff ( U , V ) )
7 :: H =  U + p . V
8 :: vx =  ParDiff ( rx , t )
10 :: Ax =  ry . rz
14 :: cp =  ParDiff ( H , T )
18 :: mu =  ParDiff ( U , n )
31 :: kq_x =  neg ( P_N_A_dt ) | N | ( inv ( V ) . ParDiff ( U , T ) . vx )
32 :: kq_x =  kq_x
39 :: fq =  F | A | ( neg ( kq_x ) . Ax . F | N | T )
41 :: n0 =  Instantiate ( n )
42 :: c =  inv ( V ) : n
43 :: c_KS =  P_NS_KS | N & S | c
44 :: N_NS_NK =  P_NS_KS | K & S | N_KS_K | K | P_K_NK
45 :: T_NK =  P_N_NK | N | T
46 :: K =  Ko : exp ( ka : inv ( R . T_NK ) )
47 :: c_KS_o =  Instantiate ( c_KS )
49 :: x_KS =  inv ( c_KS_o ) . c_KS
52 :: phi =  P_NK_KS | K & S | ( Product ( x_KS ^ ( N_KS_K ) , N_KS_K ) )
53 :: xi =  K . phi
54 :: pn =  V : ( N_NS_NK | N & K | xi )
57 :: dir =  sign ( F | N | p )
58 :: S_NS_AS =  half . ( F_NS_AS - dir : abs ( F_NS_AS ) )
59 :: c_AS =  S_NS_AS | N & S | c
60 :: fnv =  F_NS_AS | A & S | ( fV : c_AS )
62 :: dndt =  fnv + fnd + pn
63 :: to =  Instantiate ( t )
64 :: te =  Instantiate ( t )
65 :: n =  Integral ( dndt :: t in [ to , te ] ) + n0
71 :: rho =  m . inv ( V )
76 :: kc_x =  neg ( P_N_A_dt ) | N | ( mm | S in N & S | inv ( mu ) ) . inv ( V ) . ParDiff ( U , p ) . vx
78 :: kv_x =  inv ( rho ) . kc_x
79 :: kv_x =  kv_x
80 :: kd_x =  kd_x
81 :: kd_x =  neg ( P_NS_AS_dt ) | N & S | ( vx . inv ( V ) : inv ( mu ) ) . ParDiff ( U , mu )
82 :: fnd =  Ax : F_NS_AS | A & S | ( neg ( kd_x ) . F_NS_AS | N & S | mu )
83 :: fV =  F | A | neg ( kv_x ) . Ax . F | N | p
86 :: k_granulate =  k_granulate
87 :: pN =  k_granulate . r
89 :: dN =  ParDiff ( pN , r )
90 :: A =  U - T . S
91 :: G =  U + p . V - T . S
92 :: mu =  ParDiff ( G , n )
93 :: alpha =  a . sin ( t . f )
94 :: one =  Instantiate ( value  )
95 :: y_one =  Instantiate ( y  )
96 :: dy =  alpha . ( gamma . y - beta . ( y - y_one ) )
97 :: dndt =  Instantiate ( dndt , zero )
